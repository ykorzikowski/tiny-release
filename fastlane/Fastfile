# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# default_platform(:android)

json_key = "../android_signing/google_service_apikey.json"
app_name = "de.korzikowski.tinyrelease"
username = CredentialsManager::AppfileConfig.try_fetch_value(:username)
build_id = CredentialsManager::AppfileConfig.try_fetch_value(:build_id)

platform :android do
  desc "Deploy a new version to the Google Play Alpha"
  lane :alpha do
    # Return the number of commits in current git branch
    #increment_version_code
    #build_number = number_of_commits(all: true)
    build_number = build_id
    changelog_from_git_commits
    Dir.chdir ".." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")
      sh("flutter", "build", "apk", "--build-number=#{build_number}")
    end
    upload_to_play_store(
      track: 'alpha',
      json_key: json_key,
      package_name: app_name,
      apk: "build/app/outputs/apk/release/app-release.apk",
      skip_upload_screenshots: true,
      skip_upload_images: true)
  end

  desc "Deploy a new version to the Google Play Production"
  lane :release do
    # Return the number of commits in current git branch
    build_number = build_id
    changelog_from_git_commits
    Dir.chdir ".." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")
      sh("flutter", "build", "apk", "--build-number=#{build_number}")
    end
    upload_to_play_store(
      track: 'production',
      apk: "#build/app/outputs/apk/release/app-release.apk",
      skip_upload_screenshots: true,
      skip_upload_images: true)
  end
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Return the number of commits in current git branch
    build_number = build_id
    changelog_from_git_commits
    cocoapods(
      podfile: "ios/Podfile"
    )
    Dir.chdir ".." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")
      sh("flutter", "build", "ios", "--build-number=#{build_number}")
    end
    build_ios_app(
        workspace: "ios/Runner.xcworkspace",
        export_options: {
            method: "app-store",
          },
        scheme: "Runner")
    Dir.chdir ".." do
        Dir.chdir "ios" do
            upload_to_testflight(
              skip_waiting_for_build_processing: true,
              username: username)
        end
    end
  end

  desc "Push a new release build to the App Store"
  lane :release do
    # Return the number of commits in current git branch
    build_number = build_id
    changelog_from_git_commits
    Dir.chdir ".." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")
      sh("flutter", "build", "ios", "--build-number=#{build_number}")
    end
    build_ios_app(workspace: "ios/Runner.xcworkspace", scheme: "Runner")
        Dir.chdir "ios" do
            upload_to_app_store(
                  submit_for_review: true,
                  automatic_release: true,
                  force: true,
                  skip_waiting_for_build_processing: true,
                  ipa: "Runner.ipa",
                  username: username)
    end
  end
end

# generate screenshots on machine
lane :screenshots do
  Dir.chdir ".." do
    sh("screenshots")
    Dir.chdir "ios/fastlane/screenshots" do
        sh("cp -R locales/* ./")
    end
    Dir.chdir "ios/fastlane" do
	frame_screenshots
    end
  end
end
